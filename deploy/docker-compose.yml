version: "3.8"

services:
  redpanda:
    image: redpandadata/redpanda:v23.3.7
    container_name: redpanda
    command:
      - redpanda
      - start
      - --smp 1
      - --memory 1G
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9093,external://0.0.0.0:9092
      - --advertise-kafka-addr internal://redpanda:9093,external://localhost:9092
      - --set redpanda.enable_sasl=true
      - --set redpanda.enable_authz=true
      - --set redpanda.kafka_api_tls.enabled=true
      - --set redpanda.kafka_api_tls.require_client_auth=true
      - --set redpanda.kafka_api_tls.cert_file=/etc/redpanda/certs/server.crt
      - --set redpanda.kafka_api_tls.key_file=/etc/redpanda/certs/server.key
      - --set redpanda.kafka_api_tls.truststore_file=/etc/redpanda/certs/ca.crt
    ports:
      - "9092:9092"
      - "9644:9644"
    volumes:
      - ./certs:/etc/redpanda/certs

  karapace:
    image: aiven/karapace:latest
    depends_on:
      - redpanda
    environment:
      KARAPACE_REST_HOST: 0.0.0.0
      KARAPACE_REST_PORT: 8081
      KARAPACE_BOOTSTRAP_URI: redpanda:9093
      KARAPACE_SECURITY_PROTOCOL: SASL_SSL
      KARAPACE_SASL_MECHANISM: SCRAM-SHA-256
      KARAPACE_SASL_USERNAME: karapace
      KARAPACE_SASL_PASSWORD: karapace-secret
      KARAPACE_TLS_CLIENT_CERT: /etc/redpanda/certs/client.crt
      KARAPACE_TLS_CLIENT_KEY: /etc/redpanda/certs/client.key
      KARAPACE_TLS_CA_CERT: /etc/redpanda/certs/ca.crt
    ports:
      - "8081:8081"
    volumes:
      - ./certs:/etc/redpanda/certs

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.8.0
    command: mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow.db --default-artifact-root s3://mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
    ports:
      - "5000:5000"
    depends_on:
      - minio
    volumes:
      - mlflow-data:/mlruns

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics
      POSTGRES_DB: analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  connect:
    image: debezium/connect:2.6
    depends_on:
      - redpanda
      - postgres
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: redpanda:9093
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_connect_configs
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_statuses
      CONNECT_PLUGIN_PATH: /kafka/connect/plugins
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      S3_ENDPOINT: http://minio:9000
    volumes:
      - ./debezium:/kafka/connect/debezium-conf

volumes:
  minio-data:
  mlflow-data:
  postgres-data:
  connect-data:
